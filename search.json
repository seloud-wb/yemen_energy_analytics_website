[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Explore Dashboard →\nMonitor MFI and facility-level progress with interactive visualizations.\n\n\n\nRead Documentation →\nMethods, assumptions, and supporting notes."
  },
  {
    "objectID": "index.html#dashboards",
    "href": "index.html#dashboards",
    "title": "Home",
    "section": "",
    "text": "Explore Dashboard →\nMonitor MFI and facility-level progress with interactive visualizations.\n\n\n\nRead Documentation →\nMethods, assumptions, and supporting notes."
  },
  {
    "objectID": "notebooks/facilities_data_explore.html",
    "href": "notebooks/facilities_data_explore.html",
    "title": "Status",
    "section": "",
    "text": "import pandas as pd\n\n\ndf = pd.read_csv('../data/facilities.csv')\n\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 4233 entries, 0 to 4232\nData columns (total 14 columns):\n #   Column                           Non-Null Count  Dtype  \n---  ------                           --------------  -----  \n 0   date                             4233 non-null   object \n 1   Governorate                      4233 non-null   object \n 2   District                         4222 non-null   object \n 3   Village Name/ /ozla              3552 non-null   object \n 4   Type                             4233 non-null   object \n 5   Facility name                    4233 non-null   object \n 6   Phase                            4233 non-null   object \n 7   Status                           4233 non-null   object \n 8   Comments (if any)                3411 non-null   object \n 9   Installed/planned capacity (kW)  4233 non-null   float64\n 10  Male Beneficiaries (approx.)     4182 non-null   float64\n 11  Female Beneficiaries (approx.)   4221 non-null   float64\n 12  Total Beneficiaries (approx.)    4233 non-null   int64  \n 13  Coordinate                       4210 non-null   object \ndtypes: float64(3), int64(1), object(10)\nmemory usage: 463.1+ KB\n\n\n\ndf['Status'].unique()\n\narray(['Energized', 'Contract awarded', 'Under Design', 'Tender launched'],\n      dtype=object)\n\n\n\nimport pandas as pd\nimport plotly.express as px\n\ndef plot_facility_status_pie(df: pd.DataFrame, width: int = 600, height: int = 400):\n    \"\"\"\n    Create a pie chart of facility status distribution.\n\n    Parameters\n    ----------\n    df : pandas.DataFrame\n        Facilities dataset with a 'Status' column.\n    width : int\n        Width of the chart in pixels.\n    height : int\n        Height of the chart in pixels.\n\n    Returns\n    -------\n    fig : plotly.graph_objects.Figure\n        Interactive pie chart figure.\n    \"\"\"\n    # Count facilities by status\n    status_counts = df['Status'].value_counts().reset_index()\n    status_counts.columns = ['Status', 'Count']\n\n    # Build pie chart\n    fig = px.pie(\n        status_counts,\n        names=\"Status\",\n        values=\"Count\",\n        title=\"Facility Implementation Status\",\n        color=\"Status\",\n        hole=0.3,\n        width=width,\n        height=height\n    )\n    fig.update_traces(textinfo=\"percent+label\")\n    return fig\nplot_facility_status_pie(df, width=400, height=400).show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json"
  }
]